#%RAML 1.0
---
title: Security Service
version: v1
types:
  ApiError: !include schema_infra_utils.json#/definitions/ApiError
  PlatformUser: !include schema_platform_kernel.json#/definitions/PlatformUser
  PlatformUsers: !include schema_platform_kernel.json#/definitions/PlatformUsers
  PlatformGroup: !include schema_platform_kernel.json#/definitions/PlatformGroup
  PlatformGroups: !include schema_platform_kernel.json#/definitions/PlatformGroups
  PlatformRole: !include schema_platform_kernel.json#/definitions/PlatformRole
  PlatformRoles: !include schema_platform_kernel.json#/definitions/PlatformRoles
  SecurityPolicyConfiguration: !include schema_platform_kernel.json#/definitions/SecurityPolicyConfiguration
  SecuredActionPolicy: !include schema_platform_kernel.json#/definitions/SecuredActionPolicy
traits: !include api_traits.raml
baseUri: https://localhost:8443/api
/kernel/security:
  /me:
    description: Represents the current user in its interaction with the platform
    get:
      description: Gets the data representing the currently logged user
      is: [secured]
      responses:
        200:
          description: A description of the currently logged-in user
          body:
            application/json:
              type: PlatformUser
              example: |
                {
                  "type": "org.xowl.platform.kernel.platform.PlatformUser",
                  "identifier": "jdoe",
                  "name": "Jane Doe",
                  "roles": [
                    {
                      "type": "org.xowl.platform.kernel.platform.PlatformRole",
                      "identifier": "role1",
                      "name": "Role 1"
                    }
                  ]
                }
  /login:
    description: Action for a user to log on the platform
    post:
      description: Tries to login on the platform
      is: [mayFail]
      queryParameters:
        login:
          displayName: Login
          type: string
          description: The login to use
          example: admin
          required: true
      body:
        text/plain:
          type: string
          description: The password to use
          example: myPassword01
          required: true
      responses:
        200:
          description: The operation succeeded
          headers:
            Set-Cookie:
              description: The authentication token that can be used later to authenticate for further operations
              example: __Secure-xOWL-Platform=AAAAA
              required: true
          body:
            application/json:
              type: PlatformUser
              example: |
                {
                  "type": "org.xowl.platform.kernel.platform.PlatformUser",
                  "identifier": "jdoe",
                  "name": "Jane Doe",
                  "roles": [
                    {
                      "type": "org.xowl.platform.kernel.platform.PlatformRole",
                      "identifier": "role1",
                      "name": "Role 1"
                    }
                  ]
                }
        401:
          description: The login operation failed
  /logout:
    description: Action for a user to log out of the platform
    post:
      description: Tries to logout from the platform
      is: [secured]
      responses:
        200:
          description: The operation succeeded
          headers:
            Set-Cookie:
              description: Resets the authentication token
              example: __Secure-xOWL-Token-v1=; Max-Age=0
              required: true
  /policy:
    description: The security authorization policy
    get:
      description: Gets the configuration of the current security authoriation policy
      is: [secured, mayFail]
      responses:
        200:
          description: The configuration of the current security authorization polocy
          body:
            application/json:
              type: SecurityPolicyConfiguration
              example: |
                {
                  "type": "org.xowl.platform.kernel.security.SecurityPolicyConfiguration",
                  "parts": [
                    {
                      "action": {
                        "type": "org.xowl.platform.kernel.security.SecuredAction",
                        "identifier": "org.xowl.platform.kernel.security.SecurityService.GetPolicy",
                        "name": "Security Service - Get Security Policy",
                        "policies": [
                          {
                            "type": "org.xowl.platform.kernel.security.SecuredActionPolicyDescriptor",
                            "identifier": "org.xowl.platform.kernel.security.SecuredActionPolicyIsPlatformAdmin",
                            "name": "User is platform administrator",
                            "parameters": []
                          }
                        ]
                      },
                      "policy": {
                        "type": "org.xowl.platform.kernel.security.SecuredActionPolicy",
                        "identifier": "org.xowl.platform.kernel.security.SecuredActionPolicyIsPlatformAdmin",
                        "name": "User is platform administrator"
                      }
                    }
                  ]
                }
    /actions:
      /{actionId}:
        description: Represents a secured action in the configration of the security authorization policy
        put:
          description: Sets the policy for the secured action
          is: [secured, mayFail]
          body:
            application/json:
              type: SecuredActionPolicy
              example: |
                {
                  "type": "org.xowl.platform.kernel.security.SecuredActionPolicy",
                  "identifier": "org.xowl.platform.kernel.security.SecuredActionPolicyIsPlatformAdmin",
                  "name": "User is platform administrator"
                }
          responses:
            200:
              description: The operation succeeded
  /users:
    description: The collection of users on the platform
    get:
      description: Gets the list of the users on the platform
      is: [secured, mayFail]
      responses:
        200:
          description: The list of users on the platform
          body:
            application/json:
              type: PlatformUsers
              example: |
                [
                  {
                    "type": "org.xowl.platform.kernel.platform.PlatformUser",
                    "identifier": "jdoe",
                    "name": "Jane Doe",
                    "roles": [
                      {
                        "type": "org.xowl.platform.kernel.platform.PlatformRole",
                        "identifier": "role1",
                        "name": "Role 1"
                      }
                    ]
                  }
                ]
    /{userId}:
      description: A specific user on the platform
      is: [secured, mayFail, resourceAccess]
      get:
        description: Gets the description of the user
        responses:
          200:
            description: Returns the description of the user
            body:
              application/json:
                type: PlatformUser
                example: |
                  {
                    "type": "org.xowl.platform.kernel.platform.PlatformUser",
                    "identifier": "jdoe",
                    "name": "Jane Doe",
                    "roles": [
                      {
                        "type": "org.xowl.platform.kernel.platform.PlatformRole",
                        "identifier": "role1",
                        "name": "Role 1"
                      }
                    ]
                  }
      put:
        description: Creates the user on the platform
        queryParameters:
          name:
            displayName: Display name
            type: string
            description: The display name for the user
            example: John Doe
            required: true
          admin:
        body:
          text/plain:
            displayName: Password
            type: string
        responses:
          200:
            description: Returns the created user
            body:
              application/json:
                type: PlatformUser
                example: |
                  {
                    "type": "org.xowl.platform.kernel.platform.PlatformUser",
                    "identifier": "jdoe",
                    "name": "Jane Doe",
                    "roles": [
                      {
                        "type": "org.xowl.platform.kernel.platform.PlatformRole",
                        "identifier": "role1",
                        "name": "Role 1"
                      }
                    ]
                  }
      delete:
        description: Deletes the user from the platform
        responses:
          200:
            description: The operation succeeded
      /rename:
        description: Action to rename the user (updates the display name)
        is: [secured, mayFail, resourceAccess]
        post:
          description: Renames the user (updates the display name)
          queryParameters:
            name:
              displayName: Display name
              type: string
              description: The new display name for the user
              example: John Doe
              required: true
          responses:
            200:
              description: The operation succeeded
      /updateKey:
        description: Action to update the key (password) for the user
        is: [secured, mayFail, resourceAccess]
        post:
          description: Updates the key (password) for the user
          queryParameters:
            oldKey:
              displayName: Old key
              type: string
              description: The current key (password) for the user
              example: Password01
              required: true
          body:
            text/plain:
              displayName: New key
              type: string
          responses:
            200:
              description: The operation succeeded
      /resetKey:
        description: Action to reset the key (password) for the user
        is: [secured, mayFail, resourceAccess]
        post:
          description: Resets the key (password) for the user
          body:
            text/plain:
              displayName: New key
              type: string
          responses:
            200:
              description: The operation succeeded
      /assign:
        description: Action to assign a role to the user
        is: [secured, mayFail, resourceAccess]
        post:
          description: Assigns a role to the user
          queryParameters:
            role:
              displayName: Role
              type: string
              description: The identifier of the role to assign
              example: role1
              required: true
          responses:
            200:
              description: The operation succeeded
      /unassign:
        description: Action to un-assign a role from the user
        post:
          description: Un-assigns a role from the user
          queryParameters:
            role:
              displayName: Role
              type: string
              description: The identifier of the role to un-assign
              example: role1
              required: true
          responses:
            200:
              description: The operation succeeded
  /groups:
    description: The collection of groups on the platform
    get:
     description: Gets the list of the groups on the platform
     is: [secured, mayFail]
     responses:
       200:
         description: The list of groups on the platform
         body:
           application/json:
             type: PlatformGroups
             example: |
               [
                 {
                   "type": "org.xowl.platform.kernel.platform.PlatformGroup",
                   "identifier": "group1",
                   "name": "Group 1",
                   "members": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformUser",
                       "identifier": "jdoe",
                       "name": "Jane doe"
                     }
                   ],
                   "admins": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformUser",
                       "identifier": "jdoe",
                       "name": "Jane doe"
                     }
                   ],
                   "roles": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformGroup",
                       "identifier": "role1",
                       "name": "Role 1"
                     }
                   ]
                 }
               ]
    /{groupId}:
      description: A specific group on the platform
      is: [secured, mayFail, resourceAccess]
      get:
        description: Gets the description of the group
        responses:
          200:
            description: Returns the description of the group
            body:
              application/json:
                type: PlatformGroup
                example: |
                 {
                   "type": "org.xowl.platform.kernel.platform.PlatformGroup",
                   "identifier": "group1",
                   "name": "Group 1",
                   "members": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformUser",
                       "identifier": "jdoe",
                       "name": "Jane doe"
                     }
                   ],
                   "admins": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformUser",
                       "identifier": "jdoe",
                       "name": "Jane doe"
                     }
                   ],
                   "roles": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformGroup",
                       "identifier": "role1",
                       "name": "Role 1"
                     }
                   ]
                 }
      put:
        description: Creates the group on the platform
        queryParameters:
          name:
            displayName: Display name
            type: string
            description: The display name for the group
            example: Group 1
            required: true
          admin:
            displayName: Administrator
            type: string
            description: The identifier of a user to add as an administrator to the group
            example: jdoe
            required: true
        responses:
          200:
            description: Returns the created group
            body:
              application/json:
                type: PlatformGroup
                example: |
                 {
                   "type": "org.xowl.platform.kernel.platform.PlatformGroup",
                   "identifier": "group1",
                   "name": "Group 1",
                   "members": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformUser",
                       "identifier": "jdoe",
                       "name": "Jane doe"
                     }
                   ],
                   "admins": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformUser",
                       "identifier": "jdoe",
                       "name": "Jane doe"
                     }
                   ],
                   "roles": [
                     {
                       "type": "org.xowl.platform.kernel.platform.PlatformGroup",
                       "identifier": "role1",
                       "name": "Role 1"
                     }
                   ]
                 }
      delete:
        description: Deletes the group from the platform
        responses:
          200:
            description: The operation succeeded
      /rename:
        description: Action to rename the group (updates the display name)
        is: [secured, mayFail, resourceAccess]
        post:
          description: Renames the group (updates the display name)
          queryParameters:
            name:
              displayName: Display name
              type: string
              description: The new display name for the group
              example: Group X
              required: true
          responses:
            200:
              description: The operation succeeded
      /addMember:
        description: Action to add a new member to the group
        is: [secured, mayFail, resourceAccess]
        post:
          description: Adds a new member to the group
          queryParameters:
            user:
              displayName: User identifier
              type: string
              description: The identifier of the user to add as a member
              example: jsode
              required: true
          responses:
            200:
              description: The operation succeeded
      /removeMember:
        description: Action to remove a member from the group
        is: [secured, mayFail, resourceAccess]
        post:
          description: Removes a member from the group
          queryParameters:
            user:
              displayName: User identifier
              type: string
              description: The identifier of the user to remove as a member
              example: jsode
              required: true
          responses:
            200:
              description: The operation succeeded
      /addAdmin:
        description: Action to add a new admin to the group
        is: [secured, mayFail, resourceAccess]
        post:
          description: Adds a new admin to the group
          queryParameters:
            user:
              displayName: User identifier
              type: string
              description: The identifier of the user to add as an admin
              example: jsode
              required: true
          responses:
            200:
              description: The operation succeeded
      /removeAdmin:
        description: Action to remove an admin from the group
        is: [secured, mayFail, resourceAccess]
        post:
          description: Removes an admin from the group
          queryParameters:
            user:
              displayName: User identifier
              type: string
              description: The identifier of the user to remove as an admin
              example: jsode
              required: true
          responses:
            200:
              description: The operation succeeded
      /assign:
        description: Action to assign a role to the group
        is: [secured, mayFail, resourceAccess]
        post:
          description: Assigns a role to the group
          queryParameters:
            role:
              displayName: Role
              type: string
              description: The identifier of the role to assign
              example: role1
              required: true
          responses:
            200:
              description: The operation succeeded
      /unassign:
        description: Action to un-assign a role from the group
        post:
          description: Un-assigns a role from the group
          queryParameters:
            role:
              displayName: Role
              type: string
              description: The identifier of the role to un-assign
              example: role1
              required: true
          responses:
            200:
              description: The operation succeeded
  /roles:
    description: The collection of roles on the platform
    get:
     description: Gets the list of the roles on the platform
     is: [secured, mayFail]
     responses:
       200:
         description: The list of roles on the platform
         body:
           application/json:
             type: PlatformRoles
             example: |
               [
                 {
                   "type": "org.xowl.platform.kernel.platform.PlatformRole",
                   "identifier": "admin",
                   "name": "Administrator Role"
                 }
               ]
    /{roleId}:
      description: A specific role on the platform
      is: [secured, mayFail, resourceAccess]
      get:
        description: Gets the description of the role
        responses:
          200:
            description: Returns the description of the role
            body:
              application/json:
                type: PlatformRole
                example: |
                 {
                   "type": "org.xowl.platform.kernel.platform.PlatformRole",
                   "identifier": "admin",
                   "name": "Administrator Role"
                 }
      put:
        description: Creates the role on the platform
        queryParameters:
          name:
            displayName: Display name
            type: string
            description: The display name for the role
            example: Role 1
            required: true
          admin:
        responses:
          200:
            description: Returns the created role
            body:
              application/json:
                type: PlatformRole
                example: |
                 {
                   "type": "org.xowl.platform.kernel.platform.PlatformRole",
                   "identifier": "admin",
                   "name": "Administrator Role"
                 }
      delete:
        description: Deletes the group from the platform
        responses:
          200:
            description: The operation succeeded
      /rename:
        description: Action to rename the group (updates the display name)
        is: [secured, mayFail, resourceAccess]
        post:
          description: Renames the group (updates the display name)
          queryParameters:
            name:
              displayName: Display name
              type: string
              description: The new display name for the group
              example: Group X
              required: true
          responses:
            200:
              description: The operation succeeded
      /imply:
        description: Action to add role implied by this one
        is: [secured, mayFail, resourceAccess]
        post:
          description: Adds a role implied by this one
          queryParameters:
            target:
              displayName: Target role
              type: string
              description: The identifier of the role to imply
              example: role1
              required: true
          responses:
            200:
              description: The operation succeeded
      /unimply:
        description: Action to remove role implied by this one
        is: [secured, mayFail, resourceAccess]
        post:
          description: Removes a role implied by this one
          queryParameters:
            target:
              displayName: Target role
              type: string
              description: The identifier of the implied role
              example: role1
              required: true
          responses:
            200:
              description: The operation succeeded