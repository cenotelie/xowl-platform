#%RAML 1.0
---
title: Storage Service
version: v1
types:
  ApiError: !include schema_infra_utils.json#/definitions/ApiError
  Job: !include schema_platform_kernel.json#/definitions/Job
  Artifact: !include schema_platform_kernel.json#/definitions/Artifact
  Artifacts: !include schema_platform_kernel.json#/definitions/Artifacts
  XOWLRule: !include schema_platform_storage.json#/definitions/XOWLRule
  XOWLRules: !include schema_platform_storage.json#/definitions/XOWLRules
traits: !include api_traits.raml
baseUri: https://localhost:8443/api
/services/storage:
  /sparql:
    description: The SPARQL endpoint to use ufor queries on the live store
    post:
      description: Executes a SPARQL query on the data of the live artifacts
      is: [secured, mayFail]
      body:
        application/sparql-query:
          displayName: The SPARQL query to be executed
          type: string
          description: The SPARQL query to be executed
          example: SELECT ?c WHERE { GRAPH ?g { ?x a ?c } }
      queryParameters:
        store:
          displayName: Target store
          type: string
          description: The target RDf store for the query, default is 'live'
          example: live
          required: false
      responses:
        200:
          description: The result for the SPARQL query
          body:
            application/n-triples:
              description: RDF triples in N-Triple syntax
            application/n-quads:
              description: RDF quadsin N-Quad syntax
            text/turtle:
              description: RDF triples in Turtle syntax
            application/rdf+xml:
              description: RDF triples in RDF/XML syntax
            application/ld+json:
              description: RDF quads in JSON-LD syntax
            application/trig:
              description: RDF quads in TriG syntax
            application/sparql-results+xml:
              description: SPARQL results in XML syntax
            application/sparql-results+json:
              description: SPARQL results in JSON syntax
            text/csv:
              description: SPARQL results in CSV syntax
            text/tab-separated-values:
              description: SPARQL results in TSV syntax
        461:
          description: The SPARQL query failed
          body:
            text/plain:
              description: The SPARQL error message
  /artifacts:
    description: Represents the set of artifacts managed by the platform
    get:
      description: Gets the list of the artifacts managed by the platform
      is: [secured, mayFail]
      queryParameters:
        archetype:
          displayName: Archetype
          type: string
          description: The identifier of the archetype to use as a filter
          example: org.xowl.platform.kernel.artifacts.FreeArtifactArchetype
          required: false
        base:
          displayName: Base
          type: string
          description: The identifier of the family base URI to use as a filter
          example: http://xowl.org/artifact1
          required: false
      responses:
        200:
          description: The list of the requested artifacts
          body:
            application/json:
              type: Artifacts
              example: |
                [
                  {
                    "type": "org.xowl.platform.kernel.artifacts.Artifact",
                    "identifier": "http://xowl.org/artifact1/v1",
                    "name": "Artifact 1",
                    "base": "http://xowl.org/artifact1",
                    "version": "v1",
                    "from": "connector1",
                    "creation": "01/01/2001 10:10",
                    "archetype": "archetype1",
                    "superseded": ""
                  }
                ]
    /diff:
      description: Action to request the computation of the diff between two artifacts
      post:
        description: Requests the computation of the diff between two artifacts
        is: [secured, mayFail]
        queryParameters:
          left:
            displayName: Left artifact
            type: string
            description: The identifier of the left artifact to compare
            example: http://xowl.org/artifact1/v0
            required: true
          right:
            displayName: Right artifact
            type: string
            description: The identifier of the right artifact to compare
            example: http://xowl.org/artifact1/v1
            required: true
        responses:
          200:
            description: The content of the diff
            body:
              application/n-quads:
                description: The content of the diff as positive and negative quads
                example: |
                  --xowlQuads
                  <s> <p> <o> <g>
                  --xowlQuads
                  <s> <p> <o> <g>
    /live:
      description: Represents the collection of artifacts that are live on the platform
      get:
        description: Gets the list of the live artifacts
        responses:
          200:
            description: The list of the live artifacts
            body:
              application/json:
                type: Artifacts
                example: |
                  [
                    {
                      "type": "org.xowl.platform.kernel.artifacts.Artifact",
                      "identifier": "http://xowl.org/artifact1/v1",
                      "name": "Artifact 1",
                      "base": "http://xowl.org/artifact1",
                      "version": "v1",
                      "from": "connector1",
                      "creation": "01/01/2001 10:10",
                      "archetype": "archetype1",
                      "superseded": ""
                    }
                  ]
    /{artifactId}:
      description: Represents a specific artifact (in a specific version) on the platform
      is: [secured, mayFail, resourceAccess]
      get:
        description: Gets a description of the artifact
        responses:
          200:
            description: The description of the artifact
            body:
              application/json:
                type: Artifact
                example: |
                  {
                    "type": "org.xowl.platform.kernel.artifacts.Artifact",
                    "identifier": "http://xowl.org/artifact1/v1",
                    "name": "Artifact 1",
                    "base": "http://xowl.org/artifact1",
                    "version": "v1",
                    "from": "connector1",
                    "creation": "01/01/2001 10:10",
                    "archetype": "archetype1",
                    "superseded": ""
                  }
      delete:
        description: Triggers a job to delete this artifact
        responses:
          200:
            description: The description of the new job that will executes this action
            body:
              application/json:
                type: Job
                example: |
                  {
                    "type": "org.xowl.platform.kernel.jobs.Job",
                    "identifier": "job1",
                    "name": "Pull from connector 1",
                    "jobType": "org.xowl.platform.services.lts.jobs.DeleteArtifactJob",
                    "owner": {
                      "type": "org.xowl.platform.kernel.platform.PlatformUser",
                      "identifier": "jdoe",
                      "name": "Jane Doe"
                    },
                    "status": "Running",
                    "timeScheduled": "01/01/2001 10:10",
                    "timeRun": "01/01/2001 10:10",
                    "timeCompleted": "",
                    "completionRate": "0.5",
                    "payload": "http://xowl.org/platform/artifacts/artifact1/v1",
                    "result": {}
                  }
      /metadata:
        description: Represents the metadata quads of the artifact
        is: [secured, mayFail, resourceAccess]
        get:
          description: Gets the metadata quads of this artifact
          responses:
            200:
              body:
                application/n-quads:
                  <s> <p> <o> <g>
      /content:
        description: Represents the content quads of the artifact
        is: [secured, mayFail, resourceAccess]
        get:
          description: Gets the content quads of this artifact
          responses:
            200:
              body:
                application/n-quads:
                  <s> <p> <o> <g>
      /activate:
        description: Action to activate this artifact as live
        is: [secured, mayFail, resourceAccess]
        post:
          description: Triggeres a job to activate this artifact as live
          responses:
            200:
              description: The description of the new job that will executes this action
              body:
                application/json:
                  type: Job
                  example: |
                    {
                      "type": "org.xowl.platform.kernel.jobs.Job",
                      "identifier": "job1",
                      "name": "Pull from connector 1",
                      "jobType": "org.xowl.platform.services.lts.jobs.PushArtifactToLive",
                      "owner": {
                        "type": "org.xowl.platform.kernel.platform.PlatformUser",
                        "identifier": "jdoe",
                        "name": "Jane Doe"
                      },
                      "status": "Running",
                      "timeScheduled": "01/01/2001 10:10",
                      "timeRun": "01/01/2001 10:10",
                      "timeCompleted": "",
                      "completionRate": "0.5",
                      "payload": "http://xowl.org/platform/artifacts/artifact1/v1",
                      "result": {}
                    }
      /deactivate:
        description: Action to deactivate this artifact as live
        is: [secured, mayFail, resourceAccess]
        post:
          description: Triggers a job to deactivate this artifact as live
          responses:
            200:
              description: The description of the new job that will executes this action
              body:
                application/json:
                  type: Job
                  example: |
                    {
                      "type": "org.xowl.platform.kernel.jobs.Job",
                      "identifier": "job1",
                      "name": "Pull from connector 1",
                      "jobType": "org.xowl.platform.services.lts.jobs.PullArtifactFromLiveJob",
                      "owner": {
                        "type": "org.xowl.platform.kernel.platform.PlatformUser",
                        "identifier": "jdoe",
                        "name": "Jane Doe"
                      },
                      "status": "Running",
                      "timeScheduled": "01/01/2001 10:10",
                      "timeRun": "01/01/2001 10:10",
                      "timeCompleted": "",
                      "completionRate": "0.5",
                      "payload": "http://xowl.org/platform/artifacts/artifact1/v1",
                      "result": {}
                    }
  /rules:
    description: The collection of rules for the 'live' database
    is: [secured, mayFail, resourceAccess]
    get:
      description: Gets the list of the rules for the 'live' database
      responses:
        200:
          description: Returns the list of rules for the 'live' database
          body:
            application/json:
              type: XOWLRules
              example: |
                [
                  {
                    "type": "org.xowl.infra.server.api.XOWLRule",
                    "name": "http://xowl.org/rules/rule1",
                    "definition": "...",
                    "isActive": false
                  }
                ]
    put:
      description: Inserts a new rule in the 'live' database
      queryParameters:
        active:
          displayName: Is Active
          type: boolean
          description: Whether the new rule shall be immediately active
          example: false
          required: true
      body:
        application/x-xowl-rdft:
          displayName: Rule definition
          type: string
          description: The definition of the rule to insert
      responses:
        200:
          description: Returns the new rule for the 'live' database
          body:
            application/json:
              type: XOWLRule
              example: |
                {
                  "type": "org.xowl.infra.server.api.XOWLRule",
                  "name": "http://xowl.org/rules/rule1",
                  "definition": "...",
                  "isActive": false
                }
    /{ruleId}:
      description: A specific rule for the 'live' database
      is: [secured, mayFail, resourceAccess]
      get:
        description: Gets the description of the rule
        responses:
          200:
            description: Returns the description of the rule
            body:
              application/json:
                type: XOWLRule
                example: |
                  {
                    "type": "org.xowl.infra.server.api.XOWLRule",
                    "name": "http://xowl.org/rules/rule1",
                    "definition": "...",
                    "isActive": false
                  }
      delete:
        description: Deletes the rule from the 'live' database
        responses:
          200:
            description: The operation succeeded
      /status:
        description: The status of the rule
        is: [secured, mayFail, resourceAccess]
        get:
          description: Gets the current status of the rule
          responses:
            200:
              description: Returns the matching status of the rule
              body:
                application/json:
                  type: object
      /activate:
        description: Action to activate the rule
        is: [secured, mayFail, resourceAccess]
        post:
          description: Activates the rule for the 'live' database
          responses:
            200:
              description: The operation succeeded
      /deactivate:
        description: Action to de-activate the rule
        is: [secured, mayFail, resourceAccess]
        post:
          description: De-activates the rule for the 'live' database
          responses:
            200:
              description: The operation succeeded